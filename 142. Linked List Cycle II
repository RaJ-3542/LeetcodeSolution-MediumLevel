# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def detectCycle(self, head):

        one = head
        two = head
        """
        :type head: ListNode
        :rtype: ListNode
        """
        while two and two.next:
            one = one.next
            two = two.next.next
            """
        :type head: ListNode
        :rtype: ListNode
        """

            if one==two:
                one = head
                while one != two:
                    one = one.next
                    two = two.next
                return one
        return None
