class Solution {
public:
    bool isValidSudoku(vector<vector<char>>& board) {


        for (int i = 0; i < 9; i += 3) {
            for (int j = 0; j < 9; j += 3) {
                vector<bool> unq(9, false);
                for (int k = i; k < i+3; k++) {
                    for (int l = j; l < j+3; l++) {
                        char a = board[k][l];
                        if (a != '.') {
                            int nm = a - '1';
                            if (unq[nm]) {
                                return false;
                            }
                            unq[nm] = true;
                        }
                    }
                }
            }
        }

        for (int i = 0; i < 9; i ++) {
            // for (int j = 0; j < 9; j += 3) {
                vector<bool> unq(9, false);
                for (int k = 0; k < 9; k++) {
                    // for (int l = j; l < j+3; l++) {
                        char a = board[i][k];
                        if (a != '.') {
                            int nm = a - '1';
                            if (unq[nm]) {
                                return false;
                            }
                            unq[nm] = true;
                        }
                    
                }
            
        }
        for (int i = 0; i < 9; i ++) {
            // for (int j = 0; j < 9; j += 3) {
                vector<bool> unq(9, false);
                for (int k = 0; k < 9; k++) {
                    // for (int l = j; l < j+3; l++) {
                        char a = board[k][i];
                        if (a != '.') {
                            int nm = a - '1';
                            if (unq[nm]) {
                                return false;
                            }
                            unq[nm] = true;
                        }
                    
                }
            
        }

        return true;
        
    }
};
