class Solution {
public:
    vector<vector<int>> onesMinusZeros(vector<vector<int>>& grid) {
        
        int m = grid.size();
        int n = grid[0].size();
        
        // cout<<" row "<<m<<" Col "<<n<<endl;
        vector<int> rowSpan;
        vector<int> colSpan;
        
        
        for(int i = 0; i<n;i++){
            int cSum = 0;
            
            for(int j = 0; j<m;j++){
                cSum +=grid[j][i];
            }
            colSpan.push_back(cSum);
        }
        // cout<<" Dion e"<<endl;
        
        for(int i = 0; i<m;i++){
            int rSum = 0;
            
            for(int j = 0; j<n;j++){
                rSum +=grid[i][j];
            }
            rowSpan.push_back(rSum);
        }
        
        
        
        
        vector<vector<int>> res(m,vector<int>(n,0));
        
        for(int i = 0; i <m;i++){
            for(int j = 0; j<n;j++){
                res[i][j]=(2*rowSpan[i])+(2*colSpan[j])-m-n;
            }
        }
        
        return res;
        
    }
};
