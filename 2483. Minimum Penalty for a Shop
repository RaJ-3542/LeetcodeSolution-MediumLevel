class Solution {
public:
    int bestClosingTime(string customers) {
        
        int m = customers.size();
        
        int greater = 0;
        
        int res = 0;
        int ans = 0;
        
        // vector< pair <int,int> > vect;
        
//         for(
        
//         )
        // vector<int> rowSpan;
        // vector<int> colSpan;
        
        
        
        // cout<<" Dion e"<<endl;
        
        
    
        
        int pairOne = 0;
        int pairTwo = 0;
        for(int j = 0; j <m;j++){
            
            // for(int i = 0; i<m;i++){
            // int rSum = 0;
            if(customers[j]=='Y'){
                pairOne++;
                pairTwo = j+1;
            }
//             for(int i = 0; i<n;i++){
//             int cSum = 0;
            
//             for(int j = 0; j<m;j++){
//                 cSum +=grid[j][i];
//             }
//             colSpan.push_back(cSum);
//         }
            else{
                pairOne--;
                pairTwo = j;
            }
            
        //     for(int j = 0; j<n;j++){
        //         rSum +=grid[i][j];
        //     }
        //     rowSpan.push_back(rSum);
        // }
        
            
            if(pairOne>greater){
                ans = pairTwo;
            }
            
            greater = max(greater,pairOne);
        }
        return ans;
            
            
        
    }
};
