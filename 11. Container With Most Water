class Solution {
public:
    int maxArea(vector<int>& height) {
        // int a = INT_MIN;
        
        
        int sum = 0;
        int newSum = 0;
        
        int i = 0;
        int j = height.size()-1;
        
        while(i<j){
            
             
            if(height[i]<height[j]){
                sum = (j-i)*height[i];
                // cout<<sum<<endl;
                newSum = max(sum,newSum);
                // cout<<newSum<<endl; 
                
                
                i += 1;
            }
            else{
                
                sum = (j-i)*height[j];
                // cout<<sum<<endl;
                newSum = max(sum,newSum);
                // cout<<newSum<<endl;  
                j -= 1;
            }
            
        }
        
        
        
        
        
        
        
        
        
        
        
        
//         for(int i = 0; i<=height.size()-2;i++){
//             for(int j = i+1; j<height.size();j++){
                
//                 if(height[i]>=height[j]){
                    
//                     sum = (j-i)*height[j];
//                     // cout<<sum<<endl;
//                     newSum = max(sum,newSum);
//                     // cout<<newSum<<endl;
                    
//                 }
//                 else if(height[i]<height[j]){
                    
//                     sum = (j-i)*height[i];
//                     // cout<<sum<<endl;
//                     newSum = max(sum,newSum);
//                     // cout<<newSum<<endl;
                    
//                 }
                
                
//             }
//         }
        return newSum;
        
    }
};
