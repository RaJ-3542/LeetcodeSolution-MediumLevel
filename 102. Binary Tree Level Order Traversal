# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def levelOrder(self, root):
        """
        :type root: TreeNode
        :rtype: List[List[int]]
        """
        if not root:
            return []

        res = []
        it = collections.deque([root])
        """
        :type root: TreeNode
        :rtype: List[List[int]]
        """

        while it:
            """
        :type root: TreeNode
        :rtype: List[List[int]]
        """
            currLevel = []
            for _ in range(len(it)):
                node = it.popleft()
                """
        :type root: TreeNode
        :rtype: List[List[int]]
        """
                currLevel.append(node.val)
                if node.left:
                    it.append(node.left)
                if node.right:
                    it.append(node.right)
            res.append(currLevel)

        return res
